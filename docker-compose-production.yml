version: '3'

networks:
  backend:

services:

  nginx:
    image: nginx:stable-alpine
    container_name: nginx$CONTAINER_POSTFIX
    restart: always
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - ./projects:/var/www
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/logs:/var/log/nginx/
    depends_on:
      - php
      - mariadb
    environment:
      TZ: ${WORKSPACE_TIMEZONE}
    networks:
      - backend

  mariadb:
    image: yobasystems/alpine-mariadb:10.11.5
    command: --default-authentication-plugin=mysql_native_password --skip_name_resolve
    container_name: mariadb$CONTAINER_POSTFIX
    restart: always
    volumes:
      - ./mariadb/data:/var/lib/mysql
      - ./mariadb/conf.d:/etc/mysql/conf.d
      - ./mariadb/logs:/var/log/mysql/
      - ./mariadb/dump:/dump
    security_opt:
      - seccomp:unconfined
    environment:
      MYSQL_DATABASE: ${MARIADB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
      TZ: ${WORKSPACE_TIMEZONE}
    networks:
      - backend

  php:
    build:
      context: php
      dockerfile: Dockerfile
      args:
        PHP_VERSION: ${PHP_VERSION}
        PHP_XDEBUG: ${PHP_XDEBUG}
        TZ: ${WORKSPACE_TIMEZONE}
    working_dir: /var/www
    container_name: php$CONTAINER_POSTFIX
    restart: always
    volumes:
      - ./.ssh:/home/www-data/.ssh
      - ./projects:/var/www
      - ./php/php.ini:/usr/local/etc/php/conf.d/php.ini
    networks:
      - backend
    extra_hosts:
      - 'host.docker.internal:host-gateway'

  php_cli:
    build:
      context: php
      dockerfile: Dockerfile
      args:
        PHP_VERSION: ${PHP_VERSION}
        PHP_XDEBUG: ${PHP_XDEBUG}
        TZ: ${WORKSPACE_TIMEZONE}
    working_dir: /var/www
    container_name: php_cli$CONTAINER_POSTFIX
    restart: "no"
    volumes:
      - ./.ssh:/home/www-data/.ssh
      - ./projects:/var/www
      - ./php/php.ini:/usr/local/etc/php/conf.d/php.ini
    networks:
      - backend
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    deploy:
      resources:
        limits:
          cpus: '0.1'

  manticore:
    container_name: manticore$CONTAINER_POSTFIX
    image: manticoresearch/manticore
    environment:
      - EXTRA=1
    restart: always
    ulimits:
      nproc: 65535
      nofile:
         soft: 65535
         hard: 65535
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./manticore/data:/var/lib/manticore
      - ./manticore/manticore.conf:/etc/manticoresearch/manticore.conf # uncommment if you use a custom config
    networks:
      - backend